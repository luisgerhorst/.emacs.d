;;; Sending

;; (setq user-full-name "YOUR_FULL_NAME"
;;       user-mail-address "YOUR_EMAIL_ADRESS"
;;       smtpmail-default-smtp-server "YOUR_SMTP_SERVER"
;;       smtpmail-smtp-server "YOUR_SMTP_SERVER"
;;       smtpmail-smtp-service YOUR_SMTP_SERVER_PORT)

;;; Reading

;; The following variables are account specific.
(setq
 ;; Specify the location of your Maildir and the purpose of the folders
 ;; it contains. The following config is for a directory structure that
 ;; looks like this:
 
 ;; ~/.maildir
 ;; ├── Inbox
 ;; ├── Archive
 ;; ├── Drafts
 ;; ├── Junk Mail
 ;; ├── Notes
 ;; ├── Sent Items
 ;; └── Trash
 ;; mu4e-maildir "~/.maildir/fastmail"
 ;; mu4e-drafts-folder "/Drafts"
 ;; mu4e-sent-folder "/Sent Items"
 ;; mu4e-trash-folder "/Trash"
 ;; mu4e-refile-folder "/Archive"

 ;; mu4e-maildir-shortcuts
 ;; '(("/Inbox" . ?i)
 ;;   ("/Arbeit" . ?w)
 ;;   ("/Uni" . ?u))

 ;; mu4e-bookmarks
 ;; '(("flag:unread AND ( maildir:\"/Inbox\" OR maildir:\"/Arbeit\" OR maildir:\"/Uni\" )"
 ;;    "Unread personal messages"
 ;;    ?u))

 ;; mu4e-contexts
 ;; `(,(make-mu4e-context
 ;;     :name "Privat"
 ;;     :match-func (lambda (msg)
 ;;                   (when msg
 ;;                     (or
 ;;                      (mu4e-message-contact-field-matches
 ;;                       msg '(:to :cc :bcc)
 ;;                       "privat@luisgerhorst.de"))))
 ;;     :vars '((user-mail-address . "privat@luisgerhorst.de")))
 ;;   ,(make-mu4e-context
 ;;     :name "Arbeit"
 ;;     :match-func (lambda (msg)
 ;;                   (when msg
 ;;                     (or
 ;;                      (mu4e-message-contact-field-matches
 ;;                       msg '(:to :cc :bcc) "work@luisgerhorst.de")
 ;;                      (string-equal
 ;;                       (mu4e-message-field msg :maildir)
 ;;                       "/Arbeit"))))
 ;;     :vars '((user-mail-address . "work@luisgerhorst.de")))
 ;;   ,(make-mu4e-context
 ;;     :name "Uni"
 ;;     :match-func (lambda (msg)
 ;;                   (when msg
 ;;                     (or
 ;;                      (mu4e-message-contact-field-matches
 ;;                       msg '(:to :cc :bcc) "uni@luisgerhorst.de")
 ;;                      (string-equal
 ;;                       (mu4e-message-field msg :maildir)
 ;;                       "/Uni")
 ;;                      (string-equal
 ;;                       (mu4e-message-field msg :maildir)
 ;;                       "/Mailing Lists.Uni Lists")
 ;;                      (string-equal
 ;;                       (mu4e-message-field msg :maildir)
 ;;                       "/Mailing Lists.Uni Markt"))))
 ;;     :vars '((user-mail-address . "uni@luisgerhorst.de"))))
 )

;; This sets `mu4e-user-mail-address-list' to the concatenation of all
;; `user-mail-address' values for all contexts. If you have other mail
;; addresses as well, you'll need to add those manually.
;; (setq mu4e-user-mail-address-list
;;       (delq nil
;;             (mapcar (lambda (context)
;;                       (when (mu4e-context-vars context)
;;                         (cdr (assq 'user-mail-address
;;                                    (mu4e-context-vars context)))))
;;                     mu4e-contexts)))
